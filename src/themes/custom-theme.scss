@use '@angular/material' as mat;

// Include the common styles for Angular Material
@include mat.core();

// Define custom palettes
$navy-palette: (
  50: #e3e7ed,
  100: #b9c3d2,
  200: #8a9bb4,
  300: #5b7295,
  400: #375480,
  500: #18223a,
  600: #151e34,
  700: #11192c,
  800: #0e1424,
  900: #080c17,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #ffffff,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
  )
);

$gold-palette: (
  50: #fff8e1,
  100: #ffecb3,
  200: #ffe082,
  300: #ffd54f,
  400: #ffca28,
  500: #ffb100,
  600: #ffa000,
  700: #ff8f00,
  800: #ff7f00,
  900: #ff6000,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #000000,
    600: #000000,
    700: #000000,
    800: #000000,
    900: #ffffff,
  )
);

// Create the palettes
$my-primary: mat.define-palette($navy-palette, 500);
$my-accent: mat.define-palette($gold-palette, 500);
$my-warn: mat.define-palette(mat.$red-palette);

// Create the theme object
$my-theme: mat.define-light-theme({
  color: {
    primary: $my-primary,
    accent: $my-accent,
    warn: $my-warn
  }
});

// Apply the theme to all Angular Material components
@include mat.all-component-themes($my-theme);

// Custom CSS variables for use in your application
:root {
  --color-primary: #{mat.get-color-from-palette($my-primary, 500)};
  --color-primary-lighter: #{mat.get-color-from-palette($my-primary, 100)};
  --color-primary-darker: #{mat.get-color-from-palette($my-primary, 700)};
  
  --color-accent: #{mat.get-color-from-palette($my-accent, 500)};
  --color-accent-lighter: #{mat.get-color-from-palette($my-accent, 100)};
  --color-accent-darker: #{mat.get-color-from-palette($my-accent, 700)};
  
  --color-warn: #{mat.get-color-from-palette($my-warn, 500)};
}